name: Continuous Integration (Cabal)

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.6.5"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: 💽 Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: libgmp-dev

    - name: 📥 Checkout repository
      uses: actions/checkout@v1

    - name: 🧰 Select optimal cabal version
      run: |
        case "$OS" in
          Windows_NT)   echo "CABAL_VERSION=3.4.0.0-rc5"  >> $GITHUB_ENV;;
          *)            echo "CABAL_VERSION=3.4.0.0"      >> $GITHUB_ENV;;
        esac

    - name: 🧰 Setup Haskell
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ env.CABAL_VERSION }}

    - name: 🔄 Cabal update
      run: cabal update

    - name: 🛠 Cabal Configure
      run: cabal configure --builddir="$CABAL_BUILDDIR" --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: 💾 Record dependencies
      run: |
        cat ${{ env.PLAN_JSON }} | jq -r '."install-plan"[].id' | sort | uniq > dependencies.txt

    - name: 💾 Set cache version
      run: echo "CACHE_VERSION=9w76Z3Q" >> $GITHUB_ENV

    - name: 💾 Cache Dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
        restore-keys: |
          cache-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
          cache-${{ env.CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-

    - name: 🧩 Install dependencies
      run: cabal build all --only-dependencies

    - name: 🏗 Build
      run: cabal build all

    - name: 🚢 Install Binaries
      run: cabal install bech32 --overwrite-policy=always --install-method=copy --installdir=bin

    - name: 🧪 Test
      run: cabal test all

    - name: 📎 Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}-exe
        path: bin
