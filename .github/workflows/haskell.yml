name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.6.5"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: 💽 Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: libgmp-dev

    - name: 📥 Checkout repository
      uses: actions/checkout@v1

    - name: 🧰 Setup Haskell
      uses: actions/setup-haskell@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.2.0.0'

    - name: 🩹 Patch GHC 8.10.2 linker
      if: matrix.os == 'windows-latest' && matrix.ghc == '8.10.2'
      run: |
        sed -i \
          's|C:/GitLabRunner/builds/2WeHDSFP/0/ghc/ghc/inplace/mingw/bin/ld.exe|C:/ProgramData/chocolatey/lib/ghc.8.10.2/tools/ghc-8.10.2/mingw/bin/ld.exe|g' \
          C:/ProgramData/chocolatey/lib/ghc.8.10.2/tools/ghc-8.10.2/lib/settings

    - name: 🔄 Cabal update
      run: cabal update

    - name: 🛠 Cabal Configure
      run: cabal configure --builddir="$CABAL_BUILDDIR" --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: 🔑 Variables
      id: variables
      run: |
        echo "::set-output name=pkg_name::bech32"
        echo "::set-output name=cache_key::$(md5sum bech32.cabal | awk '{print $1}')"

    - name: 💾 Cache Dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.setup-haskell.outputs.cabal-store }}
        key: cache-cabal-store-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-cabal-store-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: 🧩 Install dependencies
      run: cabal build all --only-dependencies

    - name: 🏗 Build
      run: cabal build all

    - name: 🚢 Install Binaries
      run: cabal install bech32 --overwrite-policy=always --install-method=copy --installdir=bin

    - name: 🧪 Test
      run: cabal test all

    - name: 📖 Documentation
      run: |
        cabal haddock bech32
        mkdir -p dist/haddock && mv dist-newstyle/build/*/*/bech32-*/doc/html/bech32/* dist/haddock
        sed 's@href="[^"]*/doc/\([^"]*.html\)"@href="\1"@g' dist/haddock/index.html > dist/haddock/index.html.new
        mv dist/haddock/index.html.new dist/haddock/index.html

    - name: 📎 Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}-exe
        path: bin

    - name: 📤 Publish Documentation
      if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist
        enable_jekyll: true
