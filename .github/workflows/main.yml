name: Continuous Integration

on:
  pull_request:
    branches: [ "master" ]
  push:
    branches: [ "master" ]
    tags: [ "*.*.*" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - name: 💽 Install OS Packages
      uses: mstksg/get-package@v1
      with:
        apt-get: libgmp-dev

    - name: 📥 Checkout repository
      uses: actions/checkout@v1

    - name: 🧰 Setup Stack
      uses: timbod7/setup-stack@1f68f27c

    - name: 🔑 Variables
      id: variables
      run: |
        echo ::set-output name=pkg_name::$(cat *.cabal | grep "name:" | sed "s/name:\s*\(.*\)/\1/")
        echo ::set-output name=cache_key::$(md5sum stack.yaml | awk '{print $1}')

    - name: 💾 Cache Dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ matrix.os }}-${{ steps.variables.outputs.cache_key }}

    - name: 📸 Build Snapshot
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        stack --no-terminal test --bench --only-snapshot

    - name: 🔨 Build & Test
      run: |
        stack --no-terminal test --bench --haddock --no-haddock-deps --no-run-benchmarks --flag bech32:release
        mkdir -p bin && cp $(stack path --local-install-root)/bin/* bin && chmod +x bin/*
        mkdir -p dist/haddock && mv $(stack path --local-install-root)/doc/* dist/haddock
        sed -i 's@href="[^"]*/doc/\([^"]*.html\)"@href="\1"@g' dist/haddock/index.html
        wget -O Makefile https://raw.githubusercontent.com/input-output-hk/adrestia/master/.haskell/coverage/Makefile
        mkdir -p .coverage && touch .coverage/template.overlay
        DESTDIR=dist/coverage make report && DESTDIR=dist/coverage make badge
      env:
        PKG_NAME: ${{ steps.variables.outputs.pkg_name }}

    - name: 📎 Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}-exe
        path: bin

    - name: 📤 Publish Documentation
      if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist
        enable_jekyll: true

  release:
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    if: ${{ startsWith(github.ref, 'refs/tags') }}
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v1

    - name: 🏷️ Variables
      id: variables
      run: |
        echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

    - name: 🐧 Download Artifact (linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/download-artifact@v1
      with:
        name: ubuntu-latest-exe

    - name: 📦 Package Artifacts
      run: |
        mv ubuntu-latest-exe bin
        tar czf $PKG_NAME-$TAG-linux64.tar.gz README.md bech32/LICENSE bin/*
        rm -rf bin
      env:
        PKG_NAME: bech32
        TAG: ${{ steps.variables.outputs.tag }}

    - name: 🚀 Release
      uses: docker://antonyurchenko/git-release:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DRAFT_RELEASE: "true"
        PRE_RELEASE: "false"
        CHANGELOG_FILE: "bech32/ChangeLog.md"
        ALLOW_EMPTY_CHANGELOG: "false"
        ALLOW_TAG_PREFIX: "true"
      with:
        args: |
          bech32-${{ steps.variables.outputs.tag }}-linux64.tar.gz
